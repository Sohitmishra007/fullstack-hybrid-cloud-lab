name: Build & Deploy Backend to ECS

on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Debug AWS Region Secret
        run: |
          echo "AWS_REGION secret value (should be 'ap-south-1'): '${{ secrets.AWS_REGION }}'"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY_NAME_RAW: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "--- DEBUG: Current working directory (should be repo root) ---"
          pwd
          echo "--- DEBUG: Listing contents of repository root ---"
          ls -laF
          echo "--- DEBUG: Listing contents of backend/ directory (checking for Dockerfile) ---"
          ls -laF ./backend/

          # CRITICAL FIX: Remove any trailing newlines or spaces from the repository name
          # Use 'xargs' which handles leading/trailing whitespace and newlines robustly
          CLEANED_ECR_REPOSITORY_NAME=$(echo "$ECR_REPOSITORY_NAME_RAW" | xargs)

          echo "--- DEBUG: Original ECR_REPOSITORY_NAME_RAW (enclosed in quotes): '${ECR_REPOSITORY_NAME_RAW}'"
          echo "--- DEBUG: Cleaned ECR_REPOSITORY_NAME (enclosed in quotes): '${CLEANED_ECR_REPOSITORY_NAME}'"

          # Construct the full image URI for clarity
          FULL_IMAGE_URI="$ECR_REGISTRY/$CLEANED_ECR_REPOSITORY_NAME:$IMAGE_TAG"

          echo "--- DEBUG: Full Docker Image URI (enclosed in quotes): '${FULL_IMAGE_URI}'"
          echo "----------------------------------------------------"

          # The actual docker build command
          docker build \
            -f ./backend/Dockerfile \
            -t "$FULL_IMAGE_URI" \
            ./backend # This is the build context

          echo "Pushing Docker image: $FULL_IMAGE_URI"
          docker push "$FULL_IMAGE_URI"

      - name: Render Amazon ECS task definition # <-- NEW STEP!
        id: render-task-definition
        run: |
          # Construct the full image URI
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}"
          
          # Read the task definition JSON
          TASK_DEFINITION_JSON=$(cat ./backend/task-definition.json)
          
          # Use jq to update the 'image' field for the 'backend' container
          # This command finds the 'containerDefinitions' array,
          # maps over its elements, and if the container 'name' is "backend",
          # it updates its 'image' field to the full IMAGE_URI.
          UPDATED_TASK_DEFINITION=$(echo "$TASK_DEFINITION_JSON" | jq --arg IMAGE_URI "$IMAGE_URI" \
            '.containerDefinitions |= map(if .name == "backend" then .image = $IMAGE_URI else . end)' \
          )
          
          # Output the modified task definition to a new file
          echo "$UPDATED_TASK_DEFINITION" > task-definition-output.json
          
          # Debugging: Print the content of the generated file (optional, but good for troubleshooting)
          echo "--- Generated Task Definition for Deployment ---"
          cat task-definition-output.json
          echo "------------------------------------------------"

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: task-definition-output.json # <-- Now using the dynamically generated file!
          service: ${{ secrets.ECS_SERVICE }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          # Removed container-name and image inputs as they are not supported by @v1
          wait-for-service-stability: true
