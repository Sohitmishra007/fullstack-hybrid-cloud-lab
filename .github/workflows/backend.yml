name: Build & Deploy Backend to ECS

on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY_NAME: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "--- DEBUG: Current working directory (should be repo root) ---"
          pwd

          echo "--- DEBUG: Listing contents of repository root ---"
          ls -laF # List all files/dirs, append indicators

          echo "--- DEBUG: Listing contents of backend/ directory ---"
          ls -laF ./backend/

          echo "--- DEBUG: Listing contents of backend/src/main/java/com/example/taskbackend/ directory ---"
          ls -laF ./backend/src/main/java/com/example/taskbackend/

          # Verify Dockerfile presence and content
          DOCKERFILE_PATH="./backend/src/main/java/com/example/taskbackend/Dockerfile"
          CONTEXT_PATH="./backend"

          echo "--- DEBUG: Verifying Dockerfile at: $DOCKERFILE_PATH ---"
          if [ -f "$DOCKERFILE_PATH" ]; then
            echo "Dockerfile FOUND at $DOCKERFILE_PATH"
            echo "--- DEBUG: First 10 lines of Dockerfile ---"
            head -n 10 "$DOCKERFILE_PATH"
            echo "--- DEBUG: Last 10 lines of Dockerfile ---"
            tail -n 10 "$DOCKERFILE_PATH"
          else
            echo "ERROR: Dockerfile NOT FOUND at $DOCKERFILE_PATH"
            # This will intentionally fail the workflow if the Dockerfile isn't found
            exit 1
          fi

          echo "--- DEBUG: Docker build command being executed: ---"
          echo "docker build -f $DOCKERFILE_PATH -t $ECR_REGISTRY/$ECR_REPOSITORY_NAME:$IMAGE_TAG $CONTEXT_PATH"
          echo "----------------------------------------------------"

          # The actual docker build command
          docker build \
            -f "$DOCKERFILE_PATH" \
            -t "$ECR_REGISTRY/$ECR_REPOSITORY_NAME:$IMAGE_TAG" \
            "$CONTEXT_PATH"

          echo "Building Docker image: $ECR_REGISTRY/$ECR_REPOSITORY_NAME:$IMAGE_TAG"
          docker push "$ECR_REGISTRY/$ECR_REPOSITORY_NAME:$IMAGE_TAG"

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: your-task-definition-file.json # Remember to replace with your path!
          service: ${{ secrets.ECS_SERVICE }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          wait-for-service-stability: true
